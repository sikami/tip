JAVA

Putting a map inside a map and how to put

Map<String, Map<String, Integer>> one_index = new HashMap<String, Map<String, Integer>>();

Map<String, Integer> term_index = new HashMap<String, Integer>();
term_index.put("B", 1);
term_index.put("C", 1);
term_index.put("D", 1);
term_index.put("E", 1);
one_index.put("A", term_index);

term_index = new HashMap<String, Integer>();
term_index.put("A", 1);
term_index.put("C", 0);
term_index.put("D", 1);
term_index.put("E", 1);
one_index.put("B", term_index);


-- containsKey() 
-- ex:

public class Library {
    private HashMap<String, Book> directory;

    public Library() {
        this.directory = new HashMap<>();
    }

    public void addBook(Book book) {
        String name = book.getName()
        if (name == null) {
            name = "";
        }

        name = name.toLowerCase();
        name = name.trim();

        if (this.directory.containsKey(name)) {
            System.out.println("Book is already in the library!");
        } else {
            directory.put(name, book);
        }
    }
}


-- usage of hash map if when searches, reaches null point exception

public int timesSighted(String sighted) {
    return this.allSightings.getOrDefault(sighted, 0);
}



The getOrDefault method of the HashMap searches for the key passed to it as a parameter from the HashMap. If the key is not found, it returns the value of the second parameter passed to it. 


-- Grouping data with hashMap

HashMap<String, ArrayList<String>> phoneNumbers = new HashMap<>();

// let's initially attatch an empty list to the name Pekka
phoneNumbers.put("Pekka", new ArrayList<>());

// and add a phone number to the list at Pekka
phoneNumbers.get("Pekka").add("040-12348765");
// and let's add another phone number
phoneNumbers.get("Pekka").add("09-111333");

System.out.println("Pekka's numbers: " + phoneNumbers.get("Pekka"));

>>Pekka's number: [040-12348765, 09-111333]


-- OR


public class TaskTracker {
    private HashMap<String, ArrayList<Integer>> completedExercises;

    public TaskTracker() {
        this.completedExercises = new HashMap<>();
    }

    public void add(String user, int exercise) {
        // an empty list has to be added for a new user if one has not already been added
        this.completedExercises.putIfAbsent(user, new ArrayList<>());

        // let's first retrieve the list containing the exercises completed by the user and add to it
        ArrayList<Integer> completed = this.completedExercises.get(user);
        completed.add(exercise);

        // the previous would also work without the helper variable as follows
        // this.completedExercises.get(user).add(exercise);
    }

    public void print() {
        for (String name: completedExercises.keySet()) {
            System.out.println(name + ": " + completedExercises.get(name));
        }
    }
}


